# Begin_DVE_Session_Save_Info
# DVE restart session
# Saved on Mon Apr 23 18:09:53 2018
# Designs open: 1
#   Sim: /home/ugrads/d/delrod19/ecen350/git/Project/p3/simv
# Toplevel windows open: 2
# 	TopLevel.1
# 	TopLevel.2
#   Source.1: SingleCycleProcTest_v
#   Wave.1: 32 signals
#   Group count = 6
#   Group uut signal count = 28
#   Group uut_1 signal count = 26
# End_DVE_Session_Save_Info

# DVE version: L-2016.06_Full64
# DVE build date: May 24 2016 21:01:02


#<Session mode="Restart" path=".restartSimSession.tcl" type="Debug">

gui_set_loading_session_type Restart
gui_continuetime_set
gui_clear_window -type Wave
gui_clear_window -type List

# Application preferences
gui_set_pref_value -key app_default_font -value {Helvetica,10,-1,5,50,0,0,0,0,0}
gui_src_preferences -tabstop 8 -maxbits 24 -windownumber 1
#<WindowLayout>

# DVE top-level session


# Create and position top-level window: TopLevel.1

set TopLevel.1 TopLevel.1

# Docked window settings
set HSPane.1 HSPane.1
set Hier.1 Hier.1
set DLPane.1 DLPane.1
set Data.1 Data.1
set Console.1 Console.1
gui_sync_global -id ${TopLevel.1} -option true

# MDI window settings
set Source.1 Source.1
gui_update_layout -id ${Source.1} {{show_state maximized} {dock_state undocked} {dock_on_new_line false}}

# End MDI window settings


# Create and position top-level window: TopLevel.2

set TopLevel.2 TopLevel.2

# Docked window settings
gui_sync_global -id ${TopLevel.2} -option true

# MDI window settings
set Wave.1 Wave.1
gui_update_layout -id ${Wave.1} {{show_state maximized} {dock_state undocked} {dock_on_new_line false} {child_wave_left 487} {child_wave_right 1187} {child_wave_colname 241} {child_wave_colvalue 241} {child_wave_col1 0} {child_wave_col2 1}}

# End MDI window settings


#</WindowLayout>

#<Database>

gui_set_precision 1ps
gui_set_time_units 1ps
#</Database>

# DVE Global setting session: 


# Global: Breakpoints

# Global: Bus

# Global: Expressions

# Global: Signal Time Shift

# Global: Signal Compare

# Global: Signal Groups
gui_load_child_values {SingleCycleProcTest_v.uut}
gui_load_child_values {SingleCycleProcTest_v.uut.SingCycCont}
gui_load_child_values {SingleCycleProcTest_v.uut.DataMem}
gui_load_child_values {SingleCycleProcTest_v.uut.RegFile}
gui_load_child_values {SingleCycleProcTest_v.uut.ALU_Unit}


set _session_group_1 uut
gui_sg_create "$_session_group_1"
set uut "$_session_group_1"

gui_sg_addsignal -group "$_session_group_1" { SingleCycleProcTest_v.uut.Reg2Loc_w SingleCycleProcTest_v.uut.SignExt64_w SingleCycleProcTest_v.uut.MemToReg_w SingleCycleProcTest_v.uut.NextInstrAddr_w SingleCycleProcTest_v.uut.currentPC SingleCycleProcTest_v.uut.ALUOutput_w SingleCycleProcTest_v.uut.MemWrite_w SingleCycleProcTest_v.uut.RegWrite_w SingleCycleProcTest_v.uut.ALUInput_w SingleCycleProcTest_v.uut.Instr SingleCycleProcTest_v.uut.Reset_L SingleCycleProcTest_v.uut.startPC SingleCycleProcTest_v.uut.ALUZero_w SingleCycleProcTest_v.uut.RB_w SingleCycleProcTest_v.uut.ALUOp_w SingleCycleProcTest_v.uut.RegOutA_w SingleCycleProcTest_v.uut.BusW_w SingleCycleProcTest_v.uut.dMemOut SingleCycleProcTest_v.uut.CLK SingleCycleProcTest_v.uut.MemRead_w SingleCycleProcTest_v.uut.Uncondbranch_w SingleCycleProcTest_v.uut.RegOutB_w SingleCycleProcTest_v.uut.Branch_w SingleCycleProcTest_v.uut.ALUCtrl_w SingleCycleProcTest_v.uut.ALUSrc_w }

set _session_group_2 $_session_group_1|
append _session_group_2 SingCycCont
gui_sg_create "$_session_group_2"
set uut|SingCycCont "$_session_group_2"

gui_sg_addsignal -group "$_session_group_2" { SingleCycleProcTest_v.uut.SingCycCont.Uncondbranch SingleCycleProcTest_v.uut.SingCycCont.Reg2Loc SingleCycleProcTest_v.uut.SingCycCont.ALUOp SingleCycleProcTest_v.uut.SingCycCont.MemRead SingleCycleProcTest_v.uut.SingCycCont.Branch SingleCycleProcTest_v.uut.SingCycCont.ALUSrc SingleCycleProcTest_v.uut.SingCycCont.MemWrite SingleCycleProcTest_v.uut.SingCycCont.RegWrite SingleCycleProcTest_v.uut.SingCycCont.Opcode SingleCycleProcTest_v.uut.SingCycCont.MemToReg }

set _session_group_3 $_session_group_1|
append _session_group_3 ALU_Unit
gui_sg_create "$_session_group_3"
set uut|ALU_Unit "$_session_group_3"

gui_sg_addsignal -group "$_session_group_3" { SingleCycleProcTest_v.uut.ALU_Unit.Zero SingleCycleProcTest_v.uut.ALU_Unit.BusA SingleCycleProcTest_v.uut.ALU_Unit.ALUCtrl SingleCycleProcTest_v.uut.ALU_Unit.BusB SingleCycleProcTest_v.uut.ALU_Unit.n SingleCycleProcTest_v.uut.ALU_Unit.BusW }
gui_set_radix -radix {decimal} -signals {Sim:SingleCycleProcTest_v.uut.ALU_Unit.n}
gui_set_radix -radix {twosComplement} -signals {Sim:SingleCycleProcTest_v.uut.ALU_Unit.n}

gui_sg_move "$_session_group_3" -after "$_session_group_1" -pos 1 

set _session_group_4 $_session_group_1|
append _session_group_4 RegFile
gui_sg_create "$_session_group_4"
set uut|RegFile "$_session_group_4"

gui_sg_addsignal -group "$_session_group_4" { SingleCycleProcTest_v.uut.RegFile.RegWr SingleCycleProcTest_v.uut.RegFile.RA SingleCycleProcTest_v.uut.RegFile.RB SingleCycleProcTest_v.uut.RegFile.BusA SingleCycleProcTest_v.uut.RegFile.BusB SingleCycleProcTest_v.uut.RegFile.RW SingleCycleProcTest_v.uut.RegFile.BusW SingleCycleProcTest_v.uut.RegFile.registers SingleCycleProcTest_v.uut.RegFile.Clk }

gui_sg_move "$_session_group_4" -after "$_session_group_1" -pos 2 

set _session_group_5 uut_1
gui_sg_create "$_session_group_5"
set uut_1 "$_session_group_5"

gui_sg_addsignal -group "$_session_group_5" { SingleCycleProcTest_v.uut.Reg2Loc_w SingleCycleProcTest_v.uut.SignExt64_w SingleCycleProcTest_v.uut.MemToReg_w SingleCycleProcTest_v.uut.NextInstrAddr_w SingleCycleProcTest_v.uut.currentPC SingleCycleProcTest_v.uut.ALUOutput_w SingleCycleProcTest_v.uut.MemWrite_w SingleCycleProcTest_v.uut.RegWrite_w SingleCycleProcTest_v.uut.ALUInput_w SingleCycleProcTest_v.uut.Instr SingleCycleProcTest_v.uut.Reset_L SingleCycleProcTest_v.uut.startPC SingleCycleProcTest_v.uut.ALUZero_w SingleCycleProcTest_v.uut.RB_w SingleCycleProcTest_v.uut.ALUOp_w SingleCycleProcTest_v.uut.RegOutA_w SingleCycleProcTest_v.uut.BusW_w SingleCycleProcTest_v.uut.dMemOut SingleCycleProcTest_v.uut.CLK SingleCycleProcTest_v.uut.MemRead_w SingleCycleProcTest_v.uut.Uncondbranch_w SingleCycleProcTest_v.uut.RegOutB_w SingleCycleProcTest_v.uut.Branch_w SingleCycleProcTest_v.uut.ALUCtrl_w SingleCycleProcTest_v.uut.ALUSrc_w }

set _session_group_6 $_session_group_5|
append _session_group_6 DataMem
gui_sg_create "$_session_group_6"
set uut_1|DataMem "$_session_group_6"

gui_sg_addsignal -group "$_session_group_6" { SingleCycleProcTest_v.uut.DataMem.Clock SingleCycleProcTest_v.uut.DataMem.MemoryRead SingleCycleProcTest_v.uut.DataMem.WriteData SingleCycleProcTest_v.uut.DataMem.Address SingleCycleProcTest_v.uut.DataMem.MemoryWrite SingleCycleProcTest_v.uut.DataMem.ReadData SingleCycleProcTest_v.uut.DataMem.memBank }

# Global: Highlighting

# Global: Stack
gui_change_stack_mode -mode list

# Post database loading setting...

# Save global setting...

# Wave/List view global setting
gui_cov_show_value -switch false

# Close all empty TopLevel windows
foreach __top [gui_ekki_get_window_ids -type TopLevel] {
    if { [llength [gui_ekki_get_window_ids -parent $__top]] == 0} {
        gui_close_window -window $__top
    }
}
gui_set_loading_session_type noSession
# DVE View/pane content session: 


# Hier 'Hier.1'
gui_show_window -window ${Hier.1}
gui_list_set_filter -id ${Hier.1} -list { {Package 1} {All 0} {Process 1} {VirtPowSwitch 0} {UnnamedProcess 1} {UDP 0} {Function 1} {Block 1} {SrsnAndSpaCell 0} {OVA Unit 1} {LeafScCell 1} {LeafVlgCell 1} {Interface 1} {LeafVhdCell 1} {$unit 1} {NamedBlock 1} {Task 1} {VlgPackage 1} {ClassDef 1} {VirtIsoCell 0} }
gui_list_set_filter -id ${Hier.1} -text {*}
gui_change_design -id ${Hier.1} -design Sim
catch {gui_list_expand -id ${Hier.1} SingleCycleProcTest_v}
catch {gui_list_expand -id ${Hier.1} SingleCycleProcTest_v.uut}
catch {gui_list_select -id ${Hier.1} {SingleCycleProcTest_v.uut.DataMem}}
gui_view_scroll -id ${Hier.1} -vertical -set 0
gui_view_scroll -id ${Hier.1} -horizontal -set 0

# Data 'Data.1'
gui_list_set_filter -id ${Data.1} -list { {Buffer 1} {Input 1} {Others 1} {Linkage 1} {Output 1} {LowPower 1} {Parameter 1} {All 1} {Aggregate 1} {LibBaseMember 1} {Event 1} {Assertion 1} {Constant 1} {Interface 1} {BaseMembers 1} {Signal 1} {$unit 1} {Inout 1} {Variable 1} }
gui_list_set_filter -id ${Data.1} -text {*}
gui_list_show_data -id ${Data.1} {SingleCycleProcTest_v.uut.DataMem}
gui_view_scroll -id ${Data.1} -vertical -set 0
gui_view_scroll -id ${Data.1} -horizontal -set 0
gui_view_scroll -id ${Hier.1} -vertical -set 0
gui_view_scroll -id ${Hier.1} -horizontal -set 0

# Source 'Source.1'
gui_src_value_annotate -id ${Source.1} -switch false
gui_set_env TOGGLE::VALUEANNOTATE 0
gui_open_source -id ${Source.1}  -replace -active SingleCycleProcTest_v /home/ugrads/d/delrod19/ecen350/git/Project/p3/SingleCycleProcTest.v
gui_view_scroll -id ${Source.1} -vertical -set 405
gui_src_set_reusable -id ${Source.1}

# View 'Wave.1'
gui_wv_sync -id ${Wave.1} -switch false
set groupExD [gui_get_pref_value -category Wave -key exclusiveSG]
gui_set_pref_value -category Wave -key exclusiveSG -value {false}
set origWaveHeight [gui_get_pref_value -category Wave -key waveRowHeight]
gui_list_set_height -id Wave -height 25
set origGroupCreationState [gui_list_create_group_when_add -wave]
gui_list_create_group_when_add -wave -disable
gui_wv_zoom_timerange -id ${Wave.1} 0 389
gui_list_add_group -id ${Wave.1} -after {New Group} {uut_1}
gui_list_add_group -id ${Wave.1}  -after uut_1 {uut_1|DataMem}
gui_seek_criteria -id ${Wave.1} {Any Edge}



gui_set_env TOGGLE::DEFAULT_WAVE_WINDOW ${Wave.1}
gui_set_pref_value -category Wave -key exclusiveSG -value $groupExD
gui_list_set_height -id Wave -height $origWaveHeight
if {$origGroupCreationState} {
	gui_list_create_group_when_add -wave -enable
}
if { $groupExD } {
 gui_msg_report -code DVWW028
}
gui_list_set_filter -id ${Wave.1} -list { {Buffer 1} {Input 1} {Others 1} {Linkage 1} {Output 1} {Parameter 1} {All 1} {Aggregate 1} {LibBaseMember 1} {Event 1} {Assertion 1} {Constant 1} {Interface 1} {BaseMembers 1} {Signal 1} {$unit 1} {Inout 1} {Variable 1} }
gui_list_set_filter -id ${Wave.1} -text {*}
gui_list_set_insertion_bar  -id ${Wave.1} -group uut_1  -position in

gui_view_scroll -id ${Wave.1} -vertical -set 0
gui_show_grid -id ${Wave.1} -enable false
# Restore toplevel window zorder
# The toplevel window could be closed if it has no view/pane
if {[gui_exist_window -window ${TopLevel.1}]} {
	gui_set_active_window -window ${TopLevel.1}
	gui_set_active_window -window ${Source.1}
	gui_set_active_window -window ${HSPane.1}
}
if {[gui_exist_window -window ${TopLevel.2}]} {
	gui_set_active_window -window ${TopLevel.2}
	gui_set_active_window -window ${Wave.1}
}
#</Session>

